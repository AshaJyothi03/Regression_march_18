import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

df=pd.read_csv('Percentage_Hours_basis.csv')
df.head()

x=df[['Hours Study','Attendace(%)']]
y=df['Score']  

# Split the data into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=0)

model=LinearRegression()
model.fit(x_train,y_train)

slope=model.coef_
intercept=model.intercept_
print(f'Slope:{slope}')
print(f'Intercept:{intercept}')

x_pred=np.linspace(0,12,100).reshape(-1,1)
y_pred=model.predict(x_test)
y_pred

# Assuming 'Heart Rate (BPM)' is a representative feature for visualization
plt.scatter(x_test['Hours Study'], y_test) # Changed to use single column
plt.plot(x_test['Hours Study'], y_pred, color='red')  # Plot predictions against the same feature
plt.xlabel("Hours Study")  
plt.ylabel("Score")
plt.title("Hours Study VsScore")
plt.show()
